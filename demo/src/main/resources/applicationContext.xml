<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	 xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/aop
	 http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	  http://www.springframework.org/schema/tx 
	  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	
	<context:component-scan base-package="com.BshanYey"></context:component-scan>

<!-- 	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer"> -->
<!--         <property name="location"> -->
<!--         <value>classpath:resource.properties</value> -->
<!--         </property> -->
<!--     </bean> -->
	
	
	<!-- 第一步：数据源 -->
	 <!-- 扫描资源文件 -->
	   <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
	   <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
         <!-- 数据库基本信息配置 -->
         <property name="url" value="${jdbc.url}" />  
         <property name="username" value="${jdbc.username}" />  
         <property name="password" value="${jdbc.password}" />  
         <property name="driverClassName" value="${jdbc.driverClassName}" />  
         <property name="filters" value="${jdbc.filters}" />  
   		 <!-- 最大并发连接数 -->
         <property name="maxActive" value="${jdbc.maxActive}" />
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="${jdbc.initialSize}" />
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="${jdbc.maxWait}" />
         <!-- 最小空闲连接数 -->
         <property name="minIdle" value="${jdbc.minIdle}" />  
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${jdbc.validationQuery}" />  
         <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />  
         <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />  
         <property name="testOnReturn" value="${jdbc.testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" />
         <!-- 打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
         <!-- 1800秒，也就是30分钟 -->
         <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
         <!-- 关闭abanded连接时输出错误日志 -->   
         <property name="logAbandoned" value="${jdbc.logAbandoned}" />
	   </bean>
	<!-- 第二步：配置sqlSessionFactoty，生产sqlSession回话 -->
	 <!-- 第二步：创建工厂 -->
	   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	   		<property name="dataSource" ref="dataSource"></property>
	   		<!-- 加载配置文件 -->
	   		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
		   <property name="mapperLocations" value="classpath:sqlMap/**/*.xml"></property>
	   </bean>
	<!-- 配置mybatis接口代理扫描  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hyhl.mzsf.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- 第三步：配置事务 -->
	<!-- 1.定义事务管理平台 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 2.通知 -->
	<tx:advice id="txAdive" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<!-- 3.切面 -->
	<aop:config>
		<aop:advisor advice-ref="txAdive" pointcut="execution(* com.BshanYey.service.*.*(..))"/>
	</aop:config>
	
</beans>